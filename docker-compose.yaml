version: "3.8"
services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    expose:
      - 9000
    volumes:
      - .:/usr/src/app
      - ./public:/usr/src/app/public
    depends_on:
      - mysql
    networks:
      - app_network

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
    - ./public:/usr/src/app/public
    ports:
      - 8001:80
    depends_on:
      - app
    environment:
      NGINX_FPM_HOST: app
      NGINX_ROOT: /usr/src/app/public
    networks:
      - app_network

  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    container_name: zookeeper
    volumes:
      - zookeeper_data:/bitnami
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app_network

  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - '9093:9093'
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - app_network
      
  mysql:
    container_name: mysql
    image: mysql:8.0.20
    restart: always
    volumes:
      - ./storage/mysql-data:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: orderbook
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    networks:
      - app_network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app_network

volumes:
  kafka_data: {}
  zookeeper_data: {}
  
networks:
  app_network:
    driver: bridge